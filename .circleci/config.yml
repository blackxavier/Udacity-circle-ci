# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
  print_hello:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "Say Hello world again"
          command: "echo Hello"
  print_world:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "Say Hello world again"
          command: "echo World"
  print_authors_name:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "Print out author's name"
          command: echo $password
  save_job_description:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "Print job role to a file"
          command: echo "Systems Analyst" > output.txt
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - "output.txt"
  print_job_description:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: "Print job role command output"
          command: cat output.txt
          
#made some changes
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
      - print_hello
      - print_world:
          requires: [print_hello]
      - print_authors_name
      - save_job_description
      - print_job_description:
          requires: [save_job_description]
